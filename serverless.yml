service: sneaker-api
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  profile: sneaker-app
  region: us-west-2
  logRetentionInDays: 14
  timeout: 30 # 3minutes 
  # apiGateway:
  #   restApiId: <your_rest_api_id>
  #   restApiRootResourceId: <your_rest_api_root_resource_id>
  #   timeout: 60 # Set the timeout value to 60 seconds
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
        - s3:*
      Resource: "*"

plugins:
  - serverless-offline

functions:
  healthcheck: ${file(./serverless/healthcheck-function.yml):healthcheck}
  createSneaker: ${file(./serverless/sneakers-function.yml):createSneaker}
  listSneakerBrands: ${file(./serverless/sneakers-function.yml):listSneakerBrands}
  listSneakersByBrand: ${file(./serverless/sneakers-function.yml):listSneakersByBrand}
  getOneSneaker: ${file(./serverless/sneakers-function.yml):getOneSneaker}
  updateOneSneaker: ${file(./serverless/sneakers-function.yml):updateOneSneaker}
  deleteOneSneaker: ${file(./serverless/sneakers-function.yml):deleteOneSneaker}

resources:
  Resources:
    SneakersTable: ${file(./serverless/sneakers-table.yml):SneakersTable}
    SneakersBucket: ${file(./serverless/sneakers-bucket.yml):SneakersBucket}
