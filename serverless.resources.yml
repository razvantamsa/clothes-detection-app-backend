service: clothes-detection-resources
frameworkVersion: "3"

plugins:
  - serverless-hooks-plugin
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs18.x
  profile: clothes-detection-app
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:*
        - secretsmanager:*
        - logs:*
      Resource: "*"

functions:
  apikeyRotation: ${file(./serverless/lambda/resources.yml):ApikeyRotation}

resources:
  Resources:
    AssetsBucket: ${file(./serverless/s3/assets-bucket.yml):AssetsBucket}
    ShirtsBucket: ${file(./serverless/s3/shirts-bucket.yml):ShirtsBucket}
    TrousersBucket: ${file(./serverless/s3/trousers-bucket.yml):TrousersBucket}
    ShoesBucket: ${file(./serverless/s3/shoes-bucket.yml):ShoesBucket}
    ScanBucket: ${file(./serverless/s3/scan-bucket.yml):ScanBucket}

    ApikeySecret: ${file(./serverless/secretsmanager/apikey-secret.yml):ApikeySecret}

    ShirtsTable: ${file(./serverless/dynamodb/shirts-table.yml):ShirtsTable}
    TrousersTable: ${file(./serverless/dynamodb/trousers-table.yml):TrousersTable}
    ShoesTable: ${file(./serverless/dynamodb/shoes-table.yml):ShoesTable}
    ScanTable: ${file(./serverless/dynamodb/scan-table.yml):ScanTable}

    ### Monitoring
    StatusLogGroup: ${file(./serverless/cloudwatch/status.yml):StatusLogGroup}
    StatusLogStream: ${file(./serverless/cloudwatch/status.yml):StatusLogStream}
    StatusSuccessMetricFilter: ${file(./serverless/cloudwatch/status.yml):StatusSuccessMetricFilter}
    StatusErrorMetricFilter: ${file(./serverless/cloudwatch/status.yml):StatusErrorMetricFilter}

    RESTLogGroup: ${file(./serverless/cloudwatch/rest.yml):RESTLogGroup}
    RESTLogStream: ${file(./serverless/cloudwatch/rest.yml):RESTLogStream}
    RESTSuccessMetricFilter: ${file(./serverless/cloudwatch/rest.yml):RESTSuccessMetricFilter}
    RESTErrorMetricFilter: ${file(./serverless/cloudwatch/rest.yml):RESTErrorMetricFilter}

    ResourcesLogGroup: ${file(./serverless/cloudwatch/resources.yml):ResourcesLogGroup}
    ResourcesLogStream: ${file(./serverless/cloudwatch/resources.yml):ResourcesLogStream}
    ResourcesSuccessMetricFilter: ${file(./serverless/cloudwatch/resources.yml):ResourcesSuccessMetricFilter}
    ResourcesErrorMetricFilter: ${file(./serverless/cloudwatch/resources.yml):ResourcesErrorMetricFilter}

    ScraperLogGroup: ${file(./serverless/cloudwatch/scraper.yml):ScraperLogGroup}
    ScraperLogStream: ${file(./serverless/cloudwatch/scraper.yml):ScraperLogStream}
    ScraperSuccessMetricFilter: ${file(./serverless/cloudwatch/scraper.yml):ScraperSuccessMetricFilter}
    ScraperErrorMetricFilter: ${file(./serverless/cloudwatch/scraper.yml):ScraperErrorMetricFilter}

    ScanLogGroup: ${file(./serverless/cloudwatch/scan.yml):ScanLogGroup}
    ScanLogStream: ${file(./serverless/cloudwatch/scan.yml):ScanLogStream}
    ScanSuccessMetricFilter: ${file(./serverless/cloudwatch/scan.yml):ScanSuccessMetricFilter}
    ScanErrorMetricFilter: ${file(./serverless/cloudwatch/scan.yml):ScanErrorMetricFilter}

    InferenceLogGroup: ${file(./serverless/cloudwatch/inference.yml):InferenceLogGroup}
    InferenceLogStream: ${file(./serverless/cloudwatch/inference.yml):InferenceLogStream}
    InferenceSuccessMetricFilter: ${file(./serverless/cloudwatch/inference.yml):InferenceSuccessMetricFilter}
    InferenceErrorMetricFilter: ${file(./serverless/cloudwatch/inference.yml):InferenceErrorMetricFilter}


custom:
  hooks:
    after:deploy:removeLogs:
      - node src/utils/hooks/remove-logs.hook.js resources
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules:
      forceExclude:
        - aws-sdk 